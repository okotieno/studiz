enum InstitutionRequestStatus {
  PENDING
  COMPLETED
}
type InstitutionRequestModel {
  id: Int!
  institutionName: String!
  adminEmail: String!
  slug: String!
  status: InstitutionRequestStatus
  progressData: String

}

input CreateInstitutionRequestInput {
  name: String
}

input RegisterInstitutionRequestInput {
  institutionName: String!
  adminEmail: String!
}

input UpdateInstitutionRequestInput {
  name: String
}

type PaginatedInstitutionRequest {
  items: [InstitutionRequestModel]
  meta: Pagination
}

type CreateInstitutionRequestSuccessResponse {
  message: String!
  data: InstitutionRequestModel!
}

extend type Query {
  institutionRequests(query: QueryParams): PaginatedInstitutionRequest!
  institutionRequest(id: Int!): InstitutionRequestModel
}

extend type Mutation {
  updateInstitutionRequest(
    id: Int!
    params: UpdateInstitutionRequestInput
  ): CreateInstitutionRequestSuccessResponse

  createInstitutionRequest(
    input: CreateInstitutionRequestInput
  ): CreateInstitutionRequestSuccessResponse

  registerInstitutionRequest(
    input: RegisterInstitutionRequestInput!
  ): CreateInstitutionRequestSuccessResponse

  deleteInstitutionRequest(id: Int!): DeleteSuccessResponse
}
