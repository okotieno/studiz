enum InstitutionRequestStatus {
  PENDING
  COMPLETED
}

type InstitutionRequestProgressDataAdminsInfo {
  email: String, firstName: String, lastName: String
}

input InstitutionRequestProgressDataAdminsInfoInput {
  email: String, firstName: String, lastName: String
}

type IdOnly {
  id: Int
}

type InstitutionRequestProgressDataInstitutionInfo {
  name: String
  logoFileUpload: IdOnly
}

type InstitutionRequestProgressData {
  adminInfos: [InstitutionRequestProgressDataAdminsInfo]
  institutionInfo: InstitutionRequestProgressDataInstitutionInfo
}

input InstitutionRequestProgressDataInstitutionInfoInput {
  name: String
  logoFileUpload: SelectCategory
}

input InstitutionRequestProgressDataInput {
  institutionInfo: InstitutionRequestProgressDataInstitutionInfoInput,
  adminInfos: [InstitutionRequestProgressDataAdminsInfoInput]
}

type InstitutionRequestModel {
  id: Int!
  institutionName: String!
  adminEmail: String!
  slug: String!
  status: InstitutionRequestStatus
  progressData: InstitutionRequestProgressData

}

input CreateInstitutionRequestInput {
  name: String
}

input RegisterInstitutionRequestInput {
  institutionName: String!
  adminEmail: String!
}

input UpdateInstitutionRequestInput {
  institutionName: String!
  adminEmail: String!
  slug: String!
  status: InstitutionRequestStatus
  progressData: InstitutionRequestProgressDataInput
}

type PaginatedInstitutionRequest {
  items: [InstitutionRequestModel]
  meta: Pagination
}

type CreateInstitutionRequestSuccessResponse {
  message: String!
  data: InstitutionRequestModel!
}

extend type Query {
  institutionRequests(query: QueryParams): PaginatedInstitutionRequest!
  institutionRequest(id: Int!): InstitutionRequestModel
}

extend type Mutation {
  updateInstitutionRequest(
    id: Int!
    params: UpdateInstitutionRequestInput
  ): CreateInstitutionRequestSuccessResponse

  updateInstitutionRequestProgress(
    id: Int!
    params: InstitutionRequestProgressDataInput
  ): SuccessResponse

  createInstitutionRequest(
    input: CreateInstitutionRequestInput
  ): CreateInstitutionRequestSuccessResponse

  registerInstitutionRequest(
    input: RegisterInstitutionRequestInput!
  ): CreateInstitutionRequestSuccessResponse

  completeRequestRegistration(input: SelectCategory): SuccessResponse

  deleteInstitutionRequest(id: Int!): DeleteSuccessResponse
}
