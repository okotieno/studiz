import { ComponentFixture, TestBed } from '@angular/core/testing';
import { Manage<%= className %>Component } from './manage-<%= fileName %>.component';
import { provideIonicAngular } from '@ionic/angular/standalone';
import { <%= className %>FrontendService } from '@studiz/frontend/<%= fileName %>-frontend-service';
import { of } from 'rxjs';
import { AuthService } from '@studiz/frontend/auth';
import { signal } from '@angular/core';
import { provideRouter } from '@angular/router';
import { provideNoopAnimations } from '@angular/platform-browser/animations';
import { addIcons } from 'ionicons';

const authUserServiceMock = {
  user: signal({ email: 'test@example.com' })
};

describe('Manage<%= className %>Component', () => {
  addIcons({
    'house': '<svg></svg>',
    'user-tie': '<svg></svg>'
  })
  let component: Manage<%= className %>Component;
  let fixture: ComponentFixture<Manage<%= className %>Component>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      providers: [
        provideIonicAngular(),
        provideRouter([]),
        provideNoopAnimations(),
        {
          provide: AuthService,
          useValue: authUserServiceMock
        },
        {
          provide: <%= className %>FrontendService,
          useValue: {
            get<%= classNamePlural %>: () => of({ items: [], meta: { totalItems: 0 } })
          }
        }
      ],
      imports: [Manage<%= className %>Component]
    }).compileComponents();

    fixture = TestBed.createComponent(Manage<%= className %>Component);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
